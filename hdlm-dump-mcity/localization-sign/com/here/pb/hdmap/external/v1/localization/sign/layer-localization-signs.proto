syntax = "proto3";

package com.here.pb.hdmap.external.v1.localization.sign;

import "com/here/pb/hdmap/external/v1/geometry/geometry.proto";
import "com/here/pb/hdmap/external/v1/common/common.proto";

// Main message of localization-sign layer
message LocalizationSignsLayerTile {

    // Here Tile ID
    uint32 here_tile_id = 1;

    // Tile center point, for geometry offsets
    com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;

    // Signs affinity to a HERE Tile is based on the Sign's center_point
    repeated Sign signs = 3;

    // References to signs associated with road links starting in this tile
    repeated RoadToSignsReference road_to_signs_references = 4;
}

// A Sign that can be used for localization
message Sign {

    // Unique ID for the sign
    uint64 sign_id = 1;

    // 2D center point of the sign
    sint64 here_2d_coordinate = 2;

    // Sign cm from WGS84 ellipsoid
    sint32 cm_from_WGS84_ellipsoid = 3;

    // Reserved field for internal Shape
    reserved 4;

    // The heading, in degrees relative to true north in a clockwise direction, of the surface normal of the sign
    double heading_degrees = 5;

    // Classification
    SignClassification classification = 6;

    // Sign height in centimeters
    uint32 exterior_height_cm = 7;

    // Sign width in centimeters
    uint32 exterior_width_cm = 8;

    // The shape of the overall sign board
    SignShape exterior_shape = 9;

    // The dominant color of the overall sign board
    SignColor dominant_color = 10;

}

// Road Links that start in this tile with references to signs associated with it
message RoadToSignsReference {

    // The HDLM Road Link reference
    uint32 link_ref = 1;

    // List of Signs associated with road link with compliance
    repeated com.here.pb.hdmap.external.v1.common.TiledSignReference sign_refs = 2;
}

// Classification or the type and purpose of sign.
message SignClassification {

    // High-level type of the sign.  Concatenate with the value below for more specific classification.
    SignClassificationType type = 1;

    // Specific sign type value if present, e.g. "60" for a speed limit displaying 60 km/h
    string value = 2;
}

//Enumerated list of sign classification
enum SignClassificationType {
    SignClassificationType_UNKNOWN = 0;
    SignClassificationType_OTHER = 1;
    WARNING = 2;
    STOP = 3;
    YIELD = 4;
    ADVISORY_SPEED_LIMIT = 5;
    SPEED_LIMIT = 6;
    END_SPEED_LIMIT = 7;
    NO_OVERTAKING = 8;
    END_NO_OVERTAKING = 9;
    END_RESTRICTIONS = 10;
    DO_NOT_ENTER = 11;
    NO_ACCESS = 12;
}

// Enumerated list of sign shapes
enum SignShape {
    SignShape_UNKNOWN = 0;
    SignShape_OTHER = 1;
    RECTANGLE = 2;
    CIRCLE = 3;
    TRIANGLE = 4;
    DIAMOND = 5;
    PENTAGON = 6;
    CROSS = 7;
    OCTAGON = 8;
    SHIELD = 9;
}

// Enumerated list of sign colors
enum SignColor {
    SignColor_UNKNOWN = 0;
    SignColor_OTHER = 1;
    WHITE = 2;
    RED = 3;
    GREEN = 4;
    BLUE = 5;
    YELLOW = 6;
    BLACK = 7;
    BROWN = 8;
}
